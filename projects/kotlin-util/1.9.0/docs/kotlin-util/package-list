$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:it.czerwinski.kotlin.collections////PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/index.html
$dokka.location:it.czerwinski.kotlin.collections/EmptyIterator///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/-empty-iterator/index.html
$dokka.location:it.czerwinski.kotlin.collections/EmptyIterator/hasNext/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/-empty-iterator/has-next.html
$dokka.location:it.czerwinski.kotlin.collections/EmptyIterator/next/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/-empty-iterator/next.html
$dokka.location:it.czerwinski.kotlin.collections/SingletonIterator///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/-singleton-iterator/index.html
$dokka.location:it.czerwinski.kotlin.collections/SingletonIterator/SingletonIterator/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/-singleton-iterator/-singleton-iterator.html
$dokka.location:it.czerwinski.kotlin.collections/SingletonIterator/hasNext/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/-singleton-iterator/has-next.html
$dokka.location:it.czerwinski.kotlin.collections/SingletonIterator/next/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.collections/-singleton-iterator/next.html
$dokka.location:it.czerwinski.kotlin.util.control////PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util.control/index.html
$dokka.location:it.czerwinski.kotlin.util.control/NonFatal///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util.control/-non-fatal/index.html
$dokka.location:it.czerwinski.kotlin.util.control/NonFatal/invoke/#kotlin.Throwable/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util.control/-non-fatal/invoke.html
$dokka.location:it.czerwinski.kotlin.util////PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/index.html
$dokka.location:it.czerwinski.kotlin.util//asOption/TypeParam(bounds=[kotlin.Any?])?#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/as-option.html
$dokka.location:it.czerwinski.kotlin.util//contains/it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/contains.html
$dokka.location:it.czerwinski.kotlin.util//evert/it.czerwinski.kotlin.util.Option[it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/evert.html
$dokka.location:it.czerwinski.kotlin.util//evert/it.czerwinski.kotlin.util.Try[it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/evert.html
$dokka.location:it.czerwinski.kotlin.util//filterNotNull/it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])?]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-not-null.html
$dokka.location:it.czerwinski.kotlin.util//filterNotNull/it.czerwinski.kotlin.util.LeftProjection[TypeParam(bounds=[kotlin.Any?])?,TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-not-null.html
$dokka.location:it.czerwinski.kotlin.util//filterNotNull/it.czerwinski.kotlin.util.RightProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])?]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-not-null.html
$dokka.location:it.czerwinski.kotlin.util//filterNotNull/it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])?]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-not-null.html
$dokka.location:it.czerwinski.kotlin.util//filterNotNullToOption/it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])?]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-not-null-to-option.html
$dokka.location:it.czerwinski.kotlin.util//filterNotNullToOption/it.czerwinski.kotlin.util.LeftProjection[TypeParam(bounds=[kotlin.Any?])?,TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-not-null-to-option.html
$dokka.location:it.czerwinski.kotlin.util//filterNotNullToOption/it.czerwinski.kotlin.util.RightProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])?]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-not-null-to-option.html
$dokka.location:it.czerwinski.kotlin.util//filterOrElse/it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-or-else.html
$dokka.location:it.czerwinski.kotlin.util//filterOrElse/it.czerwinski.kotlin.util.LeftProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-or-else.html
$dokka.location:it.czerwinski.kotlin.util//filterOrElse/it.czerwinski.kotlin.util.RightProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/filter-or-else.html
$dokka.location:it.czerwinski.kotlin.util//flatMap/it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flat-map.html
$dokka.location:it.czerwinski.kotlin.util//flatMap/it.czerwinski.kotlin.util.LeftProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flat-map.html
$dokka.location:it.czerwinski.kotlin.util//flatMap/it.czerwinski.kotlin.util.RightProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flat-map.html
$dokka.location:it.czerwinski.kotlin.util//flatten/it.czerwinski.kotlin.util.Option[it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flatten.html
$dokka.location:it.czerwinski.kotlin.util//flatten/it.czerwinski.kotlin.util.Option[it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flatten.html
$dokka.location:it.czerwinski.kotlin.util//flatten/it.czerwinski.kotlin.util.Option[kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flatten.html
$dokka.location:it.czerwinski.kotlin.util//flatten/it.czerwinski.kotlin.util.Try[it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flatten.html
$dokka.location:it.czerwinski.kotlin.util//flatten/it.czerwinski.kotlin.util.Try[it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flatten.html
$dokka.location:it.czerwinski.kotlin.util//flatten/kotlin.collections.Iterable[it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/flatten.html
$dokka.location:it.czerwinski.kotlin.util//getOrElse/it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/get-or-else.html
$dokka.location:it.czerwinski.kotlin.util//getOrElse/it.czerwinski.kotlin.util.LeftProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/get-or-else.html
$dokka.location:it.czerwinski.kotlin.util//getOrElse/it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/get-or-else.html
$dokka.location:it.czerwinski.kotlin.util//getOrElse/it.czerwinski.kotlin.util.RightProjection[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/get-or-else.html
$dokka.location:it.czerwinski.kotlin.util//getOrElse/it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/get-or-else.html
$dokka.location:it.czerwinski.kotlin.util//joinLeft/it.czerwinski.kotlin.util.Either[it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/join-left.html
$dokka.location:it.czerwinski.kotlin.util//joinRight/it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/join-right.html
$dokka.location:it.czerwinski.kotlin.util//merge/it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/merge.html
$dokka.location:it.czerwinski.kotlin.util//orElse/it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/or-else.html
$dokka.location:it.czerwinski.kotlin.util//orElse/it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function0[it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/or-else.html
$dokka.location:it.czerwinski.kotlin.util//recover/it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[kotlin.Throwable,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/recover.html
$dokka.location:it.czerwinski.kotlin.util//recoverWith/it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[kotlin.Throwable,it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/recover-with.html
$dokka.location:it.czerwinski.kotlin.util//unzip/it.czerwinski.kotlin.util.Option[kotlin.Pair[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/unzip.html
$dokka.location:it.czerwinski.kotlin.util//unzip/it.czerwinski.kotlin.util.Option[kotlin.Triple[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/unzip.html
$dokka.location:it.czerwinski.kotlin.util/Either///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/index.html
$dokka.location:it.czerwinski.kotlin.util/Either/all/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/all.html
$dokka.location:it.czerwinski.kotlin.util/Either/any/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/any.html
$dokka.location:it.czerwinski.kotlin.util/Either/contains/#kotlin.Any/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/contains.html
$dokka.location:it.czerwinski.kotlin.util/Either/filter/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/filter.html
$dokka.location:it.czerwinski.kotlin.util/Either/filterIsInstance/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/filter-is-instance.html
$dokka.location:it.czerwinski.kotlin.util/Either/filterIsInstanceToOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/filter-is-instance-to-option.html
$dokka.location:it.czerwinski.kotlin.util/Either/filterNot/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/filter-not.html
$dokka.location:it.czerwinski.kotlin.util/Either/filterNotToOption/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/filter-not-to-option.html
$dokka.location:it.czerwinski.kotlin.util/Either/filterToOption/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/filter-to-option.html
$dokka.location:it.czerwinski.kotlin.util/Either/fold/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/fold.html
$dokka.location:it.czerwinski.kotlin.util/Either/forEach/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/for-each.html
$dokka.location:it.czerwinski.kotlin.util/Either/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/get.html
$dokka.location:it.czerwinski.kotlin.util/Either/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/Either/isLeft/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/is-left.html
$dokka.location:it.czerwinski.kotlin.util/Either/isRight/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/is-right.html
$dokka.location:it.czerwinski.kotlin.util/Either/left/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/left.html
$dokka.location:it.czerwinski.kotlin.util/Either/map/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/map.html
$dokka.location:it.czerwinski.kotlin.util/Either/none/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/none.html
$dokka.location:it.czerwinski.kotlin.util/Either/right/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/right.html
$dokka.location:it.czerwinski.kotlin.util/Either/swap/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/swap.html
$dokka.location:it.czerwinski.kotlin.util/Either/toOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-either/to-option.html
$dokka.location:it.czerwinski.kotlin.util/Failure///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/index.html
$dokka.location:it.czerwinski.kotlin.util/Failure/Failure/#kotlin.Throwable/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/-failure.html
$dokka.location:it.czerwinski.kotlin.util/Failure/exception/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/exception.html
$dokka.location:it.czerwinski.kotlin.util/Failure/failed/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/failed.html
$dokka.location:it.czerwinski.kotlin.util/Failure/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/get.html
$dokka.location:it.czerwinski.kotlin.util/Failure/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/Failure/isFailure/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/is-failure.html
$dokka.location:it.czerwinski.kotlin.util/Failure/isSuccess/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/is-success.html
$dokka.location:it.czerwinski.kotlin.util/Failure/toEither/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/to-either.html
$dokka.location:it.czerwinski.kotlin.util/Failure/toOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-failure/to-option.html
$dokka.location:it.czerwinski.kotlin.util/Left///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left/index.html
$dokka.location:it.czerwinski.kotlin.util/Left/Left/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left/-left.html
$dokka.location:it.czerwinski.kotlin.util/Left/contains/#kotlin.Any/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left/contains.html
$dokka.location:it.czerwinski.kotlin.util/Left/isLeft/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left/is-left.html
$dokka.location:it.czerwinski.kotlin.util/Left/isRight/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left/is-right.html
$dokka.location:it.czerwinski.kotlin.util/Left/swap/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left/swap.html
$dokka.location:it.czerwinski.kotlin.util/Left/value/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left/value.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/index.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/LeftProjection/#it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/-left-projection.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/all/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/all.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/any/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/any.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/either/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/either.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/filter/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/filter.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/filterIsInstance/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/filter-is-instance.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/filterIsInstanceToOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/filter-is-instance-to-option.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/filterNot/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/filter-not.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/filterNotToOption/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/filter-not-to-option.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/filterToOption/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/filter-to-option.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/forEach/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/for-each.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/get.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/map/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/map.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/none/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/none.html
$dokka.location:it.czerwinski.kotlin.util/LeftProjection/toOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-left-projection/to-option.html
$dokka.location:it.czerwinski.kotlin.util/None///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/index.html
$dokka.location:it.czerwinski.kotlin.util/None/asIterable/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/as-iterable.html
$dokka.location:it.czerwinski.kotlin.util/None/asSequence/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/as-sequence.html
$dokka.location:it.czerwinski.kotlin.util/None/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/get.html
$dokka.location:it.czerwinski.kotlin.util/None/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/None/isEmpty/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/is-empty.html
$dokka.location:it.czerwinski.kotlin.util/None/iterator/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/iterator.html
$dokka.location:it.czerwinski.kotlin.util/None/toList/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-none/to-list.html
$dokka.location:it.czerwinski.kotlin.util/Option.Companion///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/-companion/index.html
$dokka.location:it.czerwinski.kotlin.util/Option.Companion/empty/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/-companion/empty.html
$dokka.location:it.czerwinski.kotlin.util/Option.Companion/invoke/#TypeParam(bounds=[kotlin.Any?])?/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/-companion/invoke.html
$dokka.location:it.czerwinski.kotlin.util/Option///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/index.html
$dokka.location:it.czerwinski.kotlin.util/Option/all/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/all.html
$dokka.location:it.czerwinski.kotlin.util/Option/any/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/any.html
$dokka.location:it.czerwinski.kotlin.util/Option/asIterable/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/as-iterable.html
$dokka.location:it.czerwinski.kotlin.util/Option/asSequence/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/as-sequence.html
$dokka.location:it.czerwinski.kotlin.util/Option/filter/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/filter.html
$dokka.location:it.czerwinski.kotlin.util/Option/filterIsInstance/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/filter-is-instance.html
$dokka.location:it.czerwinski.kotlin.util/Option/filterNot/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/filter-not.html
$dokka.location:it.czerwinski.kotlin.util/Option/flatMap/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/flat-map.html
$dokka.location:it.czerwinski.kotlin.util/Option/fold/#TypeParam(bounds=[kotlin.Any?])#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/fold.html
$dokka.location:it.czerwinski.kotlin.util/Option/fold/#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/fold.html
$dokka.location:it.czerwinski.kotlin.util/Option/forEach/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/for-each.html
$dokka.location:it.czerwinski.kotlin.util/Option/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/get.html
$dokka.location:it.czerwinski.kotlin.util/Option/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/Option/isDefined/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/is-defined.html
$dokka.location:it.czerwinski.kotlin.util/Option/isEmpty/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/is-empty.html
$dokka.location:it.czerwinski.kotlin.util/Option/isNotEmpty/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/is-not-empty.html
$dokka.location:it.czerwinski.kotlin.util/Option/iterator/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/iterator.html
$dokka.location:it.czerwinski.kotlin.util/Option/map/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/map.html
$dokka.location:it.czerwinski.kotlin.util/Option/none/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/none.html
$dokka.location:it.czerwinski.kotlin.util/Option/toLeft/#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/to-left.html
$dokka.location:it.czerwinski.kotlin.util/Option/toList/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/to-list.html
$dokka.location:it.czerwinski.kotlin.util/Option/toRight/#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/to-right.html
$dokka.location:it.czerwinski.kotlin.util/Option/zip/#it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/zip.html
$dokka.location:it.czerwinski.kotlin.util/Option/zip/#it.czerwinski.kotlin.util.Option[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-option/zip.html
$dokka.location:it.czerwinski.kotlin.util/Right///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right/index.html
$dokka.location:it.czerwinski.kotlin.util/Right/Right/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right/-right.html
$dokka.location:it.czerwinski.kotlin.util/Right/contains/#kotlin.Any/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right/contains.html
$dokka.location:it.czerwinski.kotlin.util/Right/isLeft/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right/is-left.html
$dokka.location:it.czerwinski.kotlin.util/Right/isRight/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right/is-right.html
$dokka.location:it.czerwinski.kotlin.util/Right/swap/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right/swap.html
$dokka.location:it.czerwinski.kotlin.util/Right/value/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right/value.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/index.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/RightProjection/#it.czerwinski.kotlin.util.Either[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/-right-projection.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/all/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/all.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/any/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/any.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/either/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/either.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/filter/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/filter.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/filterIsInstance/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/filter-is-instance.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/filterIsInstanceToOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/filter-is-instance-to-option.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/filterNot/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/filter-not.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/filterNotToOption/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/filter-not-to-option.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/filterToOption/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/filter-to-option.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/forEach/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/for-each.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/get.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/map/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/map.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/none/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/none.html
$dokka.location:it.czerwinski.kotlin.util/RightProjection/toOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-right-projection/to-option.html
$dokka.location:it.czerwinski.kotlin.util/Some///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/index.html
$dokka.location:it.czerwinski.kotlin.util/Some/Some/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/-some.html
$dokka.location:it.czerwinski.kotlin.util/Some/asIterable/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/as-iterable.html
$dokka.location:it.czerwinski.kotlin.util/Some/asSequence/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/as-sequence.html
$dokka.location:it.czerwinski.kotlin.util/Some/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/get.html
$dokka.location:it.czerwinski.kotlin.util/Some/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/Some/isEmpty/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/is-empty.html
$dokka.location:it.czerwinski.kotlin.util/Some/iterator/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/iterator.html
$dokka.location:it.czerwinski.kotlin.util/Some/toList/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/to-list.html
$dokka.location:it.czerwinski.kotlin.util/Some/value/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-some/value.html
$dokka.location:it.czerwinski.kotlin.util/Success///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/index.html
$dokka.location:it.czerwinski.kotlin.util/Success/Success/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/-success.html
$dokka.location:it.czerwinski.kotlin.util/Success/failed/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/failed.html
$dokka.location:it.czerwinski.kotlin.util/Success/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/get.html
$dokka.location:it.czerwinski.kotlin.util/Success/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/Success/isFailure/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/is-failure.html
$dokka.location:it.czerwinski.kotlin.util/Success/isSuccess/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/is-success.html
$dokka.location:it.czerwinski.kotlin.util/Success/toEither/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/to-either.html
$dokka.location:it.czerwinski.kotlin.util/Success/toOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/to-option.html
$dokka.location:it.czerwinski.kotlin.util/Success/value/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-success/value.html
$dokka.location:it.czerwinski.kotlin.util/Try.Companion///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/-companion/index.html
$dokka.location:it.czerwinski.kotlin.util/Try.Companion/invoke/#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/-companion/invoke.html
$dokka.location:it.czerwinski.kotlin.util/Try///PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/index.html
$dokka.location:it.czerwinski.kotlin.util/Try/failed/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/failed.html
$dokka.location:it.czerwinski.kotlin.util/Try/filter/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/filter.html
$dokka.location:it.czerwinski.kotlin.util/Try/filterIsInstance/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/filter-is-instance.html
$dokka.location:it.czerwinski.kotlin.util/Try/filterNot/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/filter-not.html
$dokka.location:it.czerwinski.kotlin.util/Try/filterOrElse/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Throwable]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/filter-or-else.html
$dokka.location:it.czerwinski.kotlin.util/Try/flatMap/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/flat-map.html
$dokka.location:it.czerwinski.kotlin.util/Try/fold/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[kotlin.Throwable,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/fold.html
$dokka.location:it.czerwinski.kotlin.util/Try/forEach/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/for-each.html
$dokka.location:it.czerwinski.kotlin.util/Try/get/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/get.html
$dokka.location:it.czerwinski.kotlin.util/Try/getOrNull/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/get-or-null.html
$dokka.location:it.czerwinski.kotlin.util/Try/isFailure/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/is-failure.html
$dokka.location:it.czerwinski.kotlin.util/Try/isSuccess/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/is-success.html
$dokka.location:it.czerwinski.kotlin.util/Try/map/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/map.html
$dokka.location:it.czerwinski.kotlin.util/Try/toEither/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/to-either.html
$dokka.location:it.czerwinski.kotlin.util/Try/toOption/#/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/to-option.html
$dokka.location:it.czerwinski.kotlin.util/Try/transform/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]#kotlin.Function1[kotlin.Throwable,it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/transform.html
$dokka.location:it.czerwinski.kotlin.util/Try/zip/#it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/zip.html
$dokka.location:it.czerwinski.kotlin.util/Try/zip/#it.czerwinski.kotlin.util.Try[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/kotlin-util/it.czerwinski.kotlin.util/-try/zip.html
it.czerwinski.kotlin.collections
it.czerwinski.kotlin.util
it.czerwinski.kotlin.util.control

